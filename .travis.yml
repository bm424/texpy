language: python

env:
  global:
    - DEPS="ipython tqdm"
    - TEST_DEPS="pytest>=5.0 pytest-cov>=2.8.1 coveralls>=1.10 coverage>=5.0"

matrix:
  include:
  - name: "Python 3.8 on Linux"
    env: export PYTHON=3.8
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  
  - name: "Python 3.7 on Linux"
    env: export PYTHON=3.7
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  
  - name: "Python 3.6 on Linux"
    env: export PYTHON=3.6
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  
  - name: "Python 3.7 on MacOS"
    env: export PYTHON=3.7
    os: osx
    language: shell
    before_install: curl "https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -o miniconda.sh
    
sudo: True #for Miniconda

install:
  # Completes the installation of miniconda
  # setup environment
   - if [[ "$TRAVIS_OS_NAME" =~ ^(linux|osx)$ ]]; then
     chmod +x miniconda.sh
     ./miniconda.sh -b -p $HOME/miniconda
     fi
  - source $HOME/miniconda/bin/activate root;
  - conda update -y conda;
  - conda config --append channels conda-forge;
  - conda create -n testenv --yes python=$PYTHON;
  - if [[ "$TRAVIS_OS_NAME" =~ ^(linux|osx)$ ]]; then
      conda activate testenv
    else # windows
      . activate testenv
    fi
  - conda install -y $DEPS $TEST_DEPS;
  - pip install .

script:
  - export MPLBACKEND=Agg
  - pytest --cov=orix
  - coveralls
